CREATE TABLE LOGIN(
USERNAME VARCHAR2(15) NOT NULL,
PASSWORD VARCHAR2(15) NOT NULL,
CONSTRAINT PKLOGIN PRIMARY KEY(USERNAME)
);

INSERT INTO LOGIN VALUES('Sandeep','Sandeep123');
INSERT INTO LOGIN VALUES('Kiran','Kiran123');

CREATE TABLE DOCUMENT(
DOCUMENTID NUMBER NOT NULL,
TITLE VARCHAR2(100) NOT NULL,
PUBLISHDATE DATE,
PUBLISHERID NUMBER,
CONSTRAINT PKDOCUMENT PRIMARY KEY(DOCUMENTID)
);

CREATE TABLE PUBLISHER(
PUBLISHERID NUMBER NOT NULL,
PUBNAME	 VARCHAR2(30) NOT NULL,
ADDRESS	 VARCHAR2(50),
PRIMARY KEY( PUBLISHERID )
);

ALTER TABLE DOCUMENT ADD CONSTRAINT FKDOCPUB FOREIGN KEY (PUBLISHERID) REFERENCES PUBLISHER(PUBLISHERID) ON DELETE SET NULL;

CREATE TABLE BOOK(
DOCUMENTID NUMBER NOT NULL,
ISBN NUMBER NOT NULL,
EDITION NUMBER NOT NULL,
PRIMARY KEY(DOCUMENTID)
);

ALTER TABLE BOOK ADD FOREIGN KEY( DOCUMENTID ) REFERENCES DOCUMENT( DOCUMENTID )ON DELETE CASCADE;
	
CREATE TABLE AUTHOR(
AUTHORID NUMBER NOT NULL,
ANAME VARCHAR2(50),
CONSTRAINT PKAUTHOR PRIMARY KEY( AUTHORID ));

CREATE TABLE WRITES(
AUTHORID NUMBER NOT NULL,
DOCUMENTID NUMBER NOT NULL,
CONSTRAINT PKWRITE PRIMARY KEY(AUTHORID,DOCUMENTID));

ALTER TABLE WRITES ADD CONSTRAINT FKDOCWRITE FOREIGN KEY( DOCUMENTID ) REFERENCES DOCUMENT( DOCUMENTID ) ON DELETE CASCADE;
ALTER TABLE WRITES ADD CONSTRAINT FKAUTHORWRITE FOREIGN KEY( AUTHORID ) REFERENCES AUTHOR( AUTHORID ) ON DELETE SET NULL;

CREATE TABLE CONFERENCE(
DOCUMENTID NUMBER NOT NULL,
CDATE DATE,
CLOCATION VARCHAR2(50),
CEDITOR	 NUMBER,
CONSTRAINT PKCONFERNECE PRIMARY KEY(DOCUMENTID));

ALTER TABLE CONFERENCE ADD CONSTRAINT FKCONFDOC FOREIGN KEY( DOCUMENTID ) REFERENCES DOCUMENT( DOCUMENTID ) ON DELETE CASCADE;
ALTER TABLE CONFERENCE ADD CONSTRAINT FKEDITCONF FOREIGN KEY( CEDITOR ) REFERENCES AUTHOR( AUTHORID )ON DELETE SET NULL;

CREATE TABLE JOURNAL_VOLUME(
DOCUMENTID NUMBER NOT NULL,
VOLUMEID NUMBER,
ISSUENO NUMBER,
SCOPE VARCHAR2(50),
EDITORID NUMBER,
CONSTRAINT PKJOURNAL PRIMARY KEY( DOCUMENTID , VOLUMEID)
);

ALTER TABLE JOURNAL_VOLUME ADD CONSTRAINT FKJOURNALDOC FOREIGN KEY( DOCUMENTID ) REFERENCES DOCUMENT( DOCUMENTID ) ON DELETE CASCADE;
ALTER TABLE JOURNAL_VOLUME ADD CONSTRAINT FKJOURNALEDIT FOREIGN KEY( EDITORID ) REFERENCES AUTHOR( AUTHORID )ON DELETE SET NULL;

CREATE TABLE BRANCH(
BRANCHID NUMBER NOT NULL,
BRANCHNAME VARCHAR2(40)	NOT NULL,
LOCATION VARCHAR2(50),
CONSTRAINT PKBRANCH PRIMARY KEY(BRANCHID));
   
CREATE TABLE DOCUMENTCOPY(
DOCUMENTID NUMBER NOT NULL,
COPYID NUMBER NOT NULL,
BRANCHID NUMBER,	
STATUS NUMBER,
PRIMARY KEY(DOCUMENTID, COPYID)
);

ALTER TABLE DOCUMENTCOPY ADD CONSTRAINT FKDCOPY FOREIGN KEY( DOCUMENTID) REFERENCES DOCUMENT( DOCUMENTID ) ON DELETE CASCADE;
ALTER TABLE DOCUMENTCOPY ADD CONSTRAINT FKDCOPY1 FOREIGN KEY( BRANCHID) REFERENCES BRANCH( BRANCHID ) ON DELETE SET NULL;

CREATE TABLE READER(
READERID NUMBER NOT NULL,
READERTYPE VARCHAR2(15) CHECK(READERTYPE IN('Senior','Student','Staff')),	
READERNAME VARCHAR2(25),
ADDRESS VARCHAR2(30),
DOB DATE,
SEX VARCHAR2(1) CHECK (SEX IN('M','F')),
PHONE VARCHAR2(10),
EMAILID VARCHAR2(25),
CONSTRAINT PKREADER PRIMARY KEY( READERID )
);

CREATE TABLE BORROWS(
READERID NUMBER NOT NULL,
DOCUMENTID NUMBER NOT NULL,
COPYID NUMBER NOT NULL,
BRANCHID NUMBER NOT NULL,
BDTIME DATE,
RDTIME DATE,
FINE NUMBER DEFAULT 0,
CONSTRAINT PKBORROWS PRIMARY KEY(READERID,DOCUMENTID,COPYID,BRANCHID)
);
ALTER TABLE BORROWS ADD CONSTRAINT FKREADBOW FOREIGN KEY( READERID ) REFERENCES READER( READERID ) ON DELETE SET NULL;
ALTER TABLE BORROWS ADD CONSTRAINT FKDOCBOW FOREIGN KEY(DOCUMENTID,COPYID) REFERENCES DOCUMENTCOPY(DOCUMENTID,COPYID) ON DELETE SET NULL;
ALTER TABLE BORROWS ADD CONSTRAINT FKBRANCHDOC FOREIGN KEY( BRANCHID ) REFERENCES BRANCH(BRANCHID) ON DELETE SET NULL;

CREATE TABLE RESERVES(
READERID NUMBER,
DOCUMENTID NUMBER,
COPYID NUMBER,
BRANCHID NUMBER,
DTIME DATE,
CONSTRAINT PKRESERVES PRIMARY KEY (READERID,DOCUMENTID,COPYID,BRANCHID)
);
ALTER TABLE RESERVES ADD CONSTRAINT FKREADRES FOREIGN KEY( READERID ) REFERENCES READER( READERID ) ON DELETE SET NULL;
ALTER TABLE RESERVES ADD CONSTRAINT FKRESDOC FOREIGN KEY( DOCUMENTID, COPYID ) REFERENCES DOCUMENTCOPY( DOCUMENTID, COPYID) ON DELETE SET NULL;
ALTER TABLE RESERVES ADD CONSTRAINT FKBRANCHRES FOREIGN KEY( BRANCHID ) REFERENCES BRANCH( BRANCHID) ON DELETE SET NULL;

CREATE TABLE REGISTER(
READERID NUMBER NOT NULL,
BRANCHID NUMBER NOT NULL,
REGISTERDATE DATE,
CONSTRAINT PKREGISTER PRIMARY KEY (READERID,BRANCHID)
);

ALTER TABLE REGISTER ADD CONSTRAINT FKREGREADER FOREIGN KEY( READERID ) REFERENCES READER( READERID ) ON DELETE SET NULL;
ALTER TABLE REGISTER ADD CONSTRAINT FKREGBRANCH FOREIGN KEY( BRANCHID ) REFERENCES BRANCH( BRANCHID) ON DELETE SET NULL;

ASSERTIONS:
TRIGGERS:
CREATE TRIGGER RESERVEBORROWS
AFTER UPDATE OF STATUS ON DOCUMENTCOPY
REFERENCING OLD AS O NEW AS N
FOR EACH ROW 
WHEN EXISTS ( SELECT DOCUMENTID,COPYID FROM RESERVE R WHERE (R.DOCUMENTID IN (SELECT DOCUMENTID FROM N WHERE STATUS=0)))
BEGIN
INSERT INTO BORROW VALUES(R.READERID,N.DOCUMENTID,N.COPYID,R.DTIME,R.DTIME+15);
UPDATE N SET STATUS=1 WHERE N.DOCUMENTID=R.DOCUMENTID AND N.COPYID=R.COPYID;
END;
/
